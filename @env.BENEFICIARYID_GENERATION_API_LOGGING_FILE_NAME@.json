{"@timestamp":"2025-05-08T11:14:33.853Z", "log.level": "INFO", "message":"Starting BeneficiaryGenApplication using Java 21.0.6 with PID 84099 (/home/devopsbro/Pictures/AMRIT-Contribution-2-main/API/BeneficiaryID-Generation-API/target/classes started by devopsbro in /home/devopsbro/Pictures/AMRIT-Contribution-2-main/API/BeneficiaryID-Generation-API)", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"com.iemr.common.bengen.BeneficiaryGenApplication"}
{"@timestamp":"2025-05-08T11:14:33.855Z", "log.level":"DEBUG", "message":"Running with Spring Boot v3.2.2, Spring v6.1.3", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"com.iemr.common.bengen.BeneficiaryGenApplication"}
{"@timestamp":"2025-05-08T11:14:33.856Z", "log.level": "INFO", "message":"No active profile set, falling back to 1 default profile: \"default\"", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"com.iemr.common.bengen.BeneficiaryGenApplication"}
{"@timestamp":"2025-05-08T11:14:34.837Z", "log.level": "INFO", "message":"Multiple Spring Data modules found, entering strict repository configuration mode", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2025-05-08T11:14:34.838Z", "log.level": "INFO", "message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2025-05-08T11:14:34.873Z", "log.level": "INFO", "message":"Finished Spring Data repository scanning in 16 ms. Found 0 JPA repository interfaces.", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2025-05-08T11:14:34.889Z", "log.level": "INFO", "message":"Multiple Spring Data modules found, entering strict repository configuration mode", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2025-05-08T11:14:34.889Z", "log.level": "INFO", "message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2025-05-08T11:14:35.122Z", "log.level": "INFO", "message":"Finished Spring Data repository scanning in 232 ms. Found 2 JPA repository interfaces.", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2025-05-08T11:14:35.558Z", "log.level": "INFO", "message":"Multiple Spring Data modules found, entering strict repository configuration mode", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2025-05-08T11:14:35.559Z", "log.level": "INFO", "message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2025-05-08T11:14:35.585Z", "log.level": "INFO", "message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.iemr.common.bengen.repo.BeneficiaryIdRepo; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport"}
{"@timestamp":"2025-05-08T11:14:35.586Z", "log.level": "INFO", "message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.iemr.common.bengen.repo.UserLoginRepo; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport"}
{"@timestamp":"2025-05-08T11:14:35.586Z", "log.level": "INFO", "message":"Finished Spring Data repository scanning in 26 ms. Found 0 JDBC repository interfaces.", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2025-05-08T11:14:35.611Z", "log.level": "INFO", "message":"Multiple Spring Data modules found, entering strict repository configuration mode", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2025-05-08T11:14:35.613Z", "log.level": "INFO", "message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2025-05-08T11:14:35.638Z", "log.level": "INFO", "message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iemr.common.bengen.repo.BeneficiaryIdRepo; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport"}
{"@timestamp":"2025-05-08T11:14:35.639Z", "log.level": "INFO", "message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iemr.common.bengen.repo.UserLoginRepo; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport"}
{"@timestamp":"2025-05-08T11:14:35.640Z", "log.level": "INFO", "message":"Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2025-05-08T11:14:36.785Z", "log.level": "INFO", "message":"Tomcat initialized with port 8080 (http)", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer"}
{"@timestamp":"2025-05-08T11:14:36.806Z", "log.level": "INFO", "message":"Starting service [Tomcat]", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"org.apache.catalina.core.StandardService"}
{"@timestamp":"2025-05-08T11:14:36.806Z", "log.level": "INFO", "message":"Starting Servlet engine: [Apache Tomcat/10.1.18]", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"org.apache.catalina.core.StandardEngine"}
{"@timestamp":"2025-05-08T11:14:36.918Z", "log.level": "INFO", "message":"Initializing Spring embedded WebApplicationContext", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]"}
{"@timestamp":"2025-05-08T11:14:36.920Z", "log.level": "INFO", "message":"Root WebApplicationContext: initialization completed in 2980 ms", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"}
{"@timestamp":"2025-05-08T11:14:37.663Z", "log.level": "INFO", "message":"HHH000204: Processing PersistenceUnitInfo [name: default]", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"org.hibernate.jpa.internal.util.LogHelper"}
{"@timestamp":"2025-05-08T11:14:37.777Z", "log.level": "INFO", "message":"HHH000412: Hibernate ORM core version 6.4.4.Final", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"org.hibernate.Version"}
{"@timestamp":"2025-05-08T11:14:37.842Z", "log.level": "INFO", "message":"HHH000026: Second-level cache disabled", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"org.hibernate.cache.internal.RegionFactoryInitiator"}
{"@timestamp":"2025-05-08T11:14:38.259Z", "log.level": "INFO", "message":"No LoadTimeWeaver setup: ignoring JPA class transformer", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo"}
{"@timestamp":"2025-05-08T11:14:38.303Z", "log.level": "INFO", "message":"HikariPool-1 - Starting...", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"com.zaxxer.hikari.HikariDataSource"}
{"@timestamp":"2025-05-08T11:14:38.315Z", "log.level": "WARN", "message":"HHH000342: Could not obtain connection to query metadata", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator","error.type":"java.lang.RuntimeException","error.message":"Driver com.mysql.cj.jdbc.Driver claims to not accept jdbcUrl, @env.DATABASE_URL@","error.stack_trace":"java.lang.RuntimeException: Driver com.mysql.cj.jdbc.Driver claims to not accept jdbcUrl, @env.DATABASE_URL@\n\tat com.zaxxer.hikari.util.DriverDataSource.<init>(DriverDataSource.java:110)\n\tat com.zaxxer.hikari.pool.PoolBase.initializeDataSource(PoolBase.java:326)\n\tat com.zaxxer.hikari.pool.PoolBase.<init>(PoolBase.java:112)\n\tat com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:93)\n\tat com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)\n\tat org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:428)\n\tat org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:276)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:107)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)\n\tat org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)\n\tat org.hibernate.boot.model.relational.Database.<init>(Database.java:45)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:223)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:191)\n\tat org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:170)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)\n\tat org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)\n\tat org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)\n\tat org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)\n\tat org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:685)\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1164)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)\n\tat org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)\n\tat org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1684)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1433)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)\n\tat org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)\n\tat org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1418)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)\n\tat org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)\n\tat org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:907)\n\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:785)\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1164)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)\n\tat org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)\n\tat org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:201)\n\tat org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:96)\n\tat org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:85)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:266)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:240)\n\tat org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)\n\tat org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4866)\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)\n\tat org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)\n\tat java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)\n\tat org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)\n\tat org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:845)\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)\n\tat org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)\n\tat java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)\n\tat org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)\n\tat org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:240)\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)\n\tat org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)\n\tat org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:917)\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)\n\tat org.apache.catalina.startup.Tomcat.start(Tomcat.java:488)\n\tat org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:126)\n\tat org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:105)\n\tat org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:499)\n\tat org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:218)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:618)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:334)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)\n\tat com.iemr.common.bengen.BeneficiaryGenApplication.main(BeneficiaryGenApplication.java:45)\n"}
{"@timestamp":"2025-05-08T11:14:38.348Z", "log.level": "WARN", "message":"HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"org.hibernate.orm.deprecation"}
{"@timestamp":"2025-05-08T11:14:39.740Z", "log.level": "INFO", "message":"HHH000182: No default (no-argument) constructor for class: com.iemr.common.bengen.domain.M_BeneficiaryRegidMapping (class must be instantiated by Interceptor)", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"org.hibernate.metamodel.internal.EntityInstantiatorPojoStandard"}
{"@timestamp":"2025-05-08T11:14:39.989Z", "log.level": "INFO", "message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator"}
{"@timestamp":"2025-05-08T11:14:39.993Z", "log.level": "INFO", "message":"Initialized JPA EntityManagerFactory for persistence unit 'default'", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"}
{"@timestamp":"2025-05-08T11:14:40.264Z", "log.level": "INFO", "message":"JSqlParser is in classpath; If applicable, JSqlParser will be used", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"org.springframework.data.jpa.repository.query.QueryEnhancerFactory"}
{"@timestamp":"2025-05-08T11:14:40.264Z", "log.level": "INFO", "message":"Hibernate is in classpath; If applicable, HQL parser will be used.", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"org.springframework.data.jpa.repository.query.QueryEnhancerFactory"}
{"@timestamp":"2025-05-08T11:14:41.204Z", "log.level":"DEBUG", "message":"QuartzConfig initialized.", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"com.iemr.common.bengen.config.quartz.QuartzConfig$$SpringCGLIB$$0"}
{"@timestamp":"2025-05-08T11:14:41.304Z", "log.level":"DEBUG", "message":"Ben gen Scheduler Start", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"com.iemr.common.bengen.config.quartz.QuartzConfig$$SpringCGLIB$$0"}
{"@timestamp":"2025-05-08T11:14:41.320Z", "log.level":"DEBUG", "message":"Ben gen Scheduler End", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"com.iemr.common.bengen.config.quartz.QuartzConfig$$SpringCGLIB$$0"}
{"@timestamp":"2025-05-08T11:14:41.390Z", "log.level": "INFO", "message":"Using default implementation for ThreadExecutor", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"org.quartz.impl.StdSchedulerFactory"}
{"@timestamp":"2025-05-08T11:14:41.416Z", "log.level": "INFO", "message":"Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"org.quartz.core.SchedulerSignalerImpl"}
{"@timestamp":"2025-05-08T11:14:41.417Z", "log.level": "INFO", "message":"Quartz Scheduler v2.5.0-rc1 created.", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"org.quartz.core.QuartzScheduler"}
{"@timestamp":"2025-05-08T11:14:41.419Z", "log.level": "INFO", "message":"RAMJobStore initialized.", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"org.quartz.simpl.RAMJobStore"}
{"@timestamp":"2025-05-08T11:14:41.420Z", "log.level": "INFO", "message":"Scheduler meta-data: Quartz Scheduler (v2.5.0-rc1) 'jelies-quartz-scheduler' with instanceId 'NON_CLUSTERED'\n  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.\n  NOT STARTED.\n  Currently in standby mode.\n  Number of jobs executed: 0\n  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.\n  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.\n", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"org.quartz.core.QuartzScheduler"}
{"@timestamp":"2025-05-08T11:14:41.421Z", "log.level": "INFO", "message":"Quartz scheduler 'jelies-quartz-scheduler' initialized from an externally provided properties instance.", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"org.quartz.impl.StdSchedulerFactory"}
{"@timestamp":"2025-05-08T11:14:41.421Z", "log.level": "INFO", "message":"Quartz scheduler version: 2.5.0-rc1", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"org.quartz.impl.StdSchedulerFactory"}
{"@timestamp":"2025-05-08T11:14:41.421Z", "log.level": "INFO", "message":"JobFactory set to: com.iemr.common.bengen.config.quartz.AutowiringSpringBeanJobFactory@15c27b65", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"org.quartz.core.QuartzScheduler"}
{"@timestamp":"2025-05-08T11:14:41.429Z", "log.level": "INFO", "message":"HikariPool-1 - Starting...", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"com.zaxxer.hikari.HikariDataSource"}
{"@timestamp":"2025-05-08T11:14:41.430Z", "log.level": "INFO", "message":"Scheduler jelies-quartz-scheduler_$_NON_CLUSTERED shutting down.", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"org.quartz.core.QuartzScheduler"}
{"@timestamp":"2025-05-08T11:14:41.431Z", "log.level": "INFO", "message":"Scheduler jelies-quartz-scheduler_$_NON_CLUSTERED paused.", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"org.quartz.core.QuartzScheduler"}
{"@timestamp":"2025-05-08T11:14:41.903Z", "log.level": "INFO", "message":"Scheduler jelies-quartz-scheduler_$_NON_CLUSTERED shutdown complete.", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"org.quartz.core.QuartzScheduler"}
{"@timestamp":"2025-05-08T11:14:41.904Z", "log.level": "WARN", "message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'quartzScheduler' defined in class path resource [com/iemr/common/bengen/config/quartz/QuartzConfig.class]: Could not open JPA EntityManager for transaction", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext"}
{"@timestamp":"2025-05-08T11:14:41.905Z", "log.level": "INFO", "message":"Closing JPA EntityManagerFactory for persistence unit 'default'", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"}
{"@timestamp":"2025-05-08T11:14:42.035Z", "log.level": "INFO", "message":"Stopping service [Tomcat]", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"org.apache.catalina.core.StandardService"}
{"@timestamp":"2025-05-08T11:14:42.054Z", "log.level": "INFO", "message":"\n\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger"}
{"@timestamp":"2025-05-08T11:14:42.084Z", "log.level":"ERROR", "message":"Application run failed", "ecs.version": "1.2.0","process.thread.name":"main","log.logger":"org.springframework.boot.SpringApplication","error.type":"org.springframework.beans.factory.BeanCreationException","error.message":"Error creating bean with name 'quartzScheduler' defined in class path resource [com/iemr/common/bengen/config/quartz/QuartzConfig.class]: Could not open JPA EntityManager for transaction","error.stack_trace":"org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'quartzScheduler' defined in class path resource [com/iemr/common/bengen/config/quartz/QuartzConfig.class]: Could not open JPA EntityManager for transaction\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1773)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:969)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:959)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:334)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)\n\tat com.iemr.common.bengen.BeneficiaryGenApplication.main(BeneficiaryGenApplication.java:45)\nCaused by: org.springframework.transaction.CannotCreateTransactionException: Could not open JPA EntityManager for transaction\n\tat org.springframework.orm.jpa.JpaTransactionManager.doBegin(JpaTransactionManager.java:466)\n\tat org.springframework.transaction.support.AbstractPlatformTransactionManager.startTransaction(AbstractPlatformTransactionManager.java:531)\n\tat org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:405)\n\tat org.springframework.scheduling.quartz.SchedulerAccessor.registerJobsAndTriggers(SchedulerAccessor.java:209)\n\tat org.springframework.scheduling.quartz.SchedulerFactoryBean.afterPropertiesSet(SchedulerFactoryBean.java:507)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)\n\t... 16 more\nCaused by: java.lang.RuntimeException: Driver com.mysql.cj.jdbc.Driver claims to not accept jdbcUrl, @env.DATABASE_URL@\n\tat com.zaxxer.hikari.util.DriverDataSource.<init>(DriverDataSource.java:110)\n\tat com.zaxxer.hikari.pool.PoolBase.initializeDataSource(PoolBase.java:326)\n\tat com.zaxxer.hikari.pool.PoolBase.<init>(PoolBase.java:112)\n\tat com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:93)\n\tat com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)\n\tat org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)\n\tat org.hibernate.internal.NonContextualJdbcConnectionAccess.obtainConnection(NonContextualJdbcConnectionAccess.java:46)\n\tat org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:113)\n\tat org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getPhysicalConnection(LogicalConnectionManagedImpl.java:143)\n\tat org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getConnectionForTransactionManagement(LogicalConnectionManagedImpl.java:273)\n\tat org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.begin(LogicalConnectionManagedImpl.java:281)\n\tat org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.begin(JdbcResourceLocalTransactionCoordinatorImpl.java:232)\n\tat org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:83)\n\tat org.springframework.orm.jpa.vendor.HibernateJpaDialect.beginTransaction(HibernateJpaDialect.java:176)\n\tat org.springframework.orm.jpa.JpaTransactionManager.doBegin(JpaTransactionManager.java:420)\n\t... 22 more\n"}
